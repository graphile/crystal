"use strict";
/*
 * THIS FILE IS AUTOGENERATED!
 *
 * DO NOT EDIT!
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeIntrospectionQuery = void 0;
// We might want this to take options in future, so we've made it a function.
/**
 * Builds a PostgreSQL introspection SQL query to return an object with the same shape as `Introspection` above.
 */
const makeIntrospectionQuery = () => `\
with
  database as (
    select pg_database.oid as _id, *
    from pg_catalog.pg_database
    where datname = current_database()
  ),

  namespaces as (
    select pg_namespace.oid as _id, *
    from pg_catalog.pg_namespace
    where nspname <> 'information_schema'
  ),

  classes as (
    select pg_class.oid as _id, *,
      pg_catalog.pg_relation_is_updatable(oid, true)::bit(8)::int4 as "updatable_mask"
    from pg_catalog.pg_class
    where relnamespace in (select namespaces._id from namespaces where nspname <> 'information_schema' and nspname not like 'pg\\_%')
  ),

  attributes as (
    select *
    from pg_catalog.pg_attribute
    where attrelid in (select classes._id from classes) AND attnum > 0
  ),

  constraints as (
    select pg_constraint.oid as _id, *
    from pg_catalog.pg_constraint
    where connamespace in (select namespaces._id from namespaces where nspname <> 'information_schema' and nspname not like 'pg\\_%')
  ),

  procs as (
    select pg_proc.oid as _id, *
    from pg_catalog.pg_proc
    where pronamespace in (select namespaces._id from namespaces where nspname <> 'information_schema' and nspname not like 'pg\\_%')
    and prorettype operator(pg_catalog.<>) 2279
  ),

  roles as (
    select pg_roles.oid as _id, *
    from pg_catalog.pg_roles
  ),

  auth_members as (
    select *
    from pg_catalog.pg_auth_members
    where roleid in (select roles._id from roles)
  ),

  types as (
    select pg_type.oid as _id, *
    from pg_catalog.pg_type
    where (typnamespace in (select namespaces._id from namespaces where nspname <> 'information_schema' and nspname not like 'pg\\_%'))
    or (typnamespace = 'pg_catalog'::regnamespace)
  ),

  enums as (
    select pg_enum.oid as _id, *
    from pg_catalog.pg_enum
    where enumtypid in (select types._id from types)
  ),

  extensions as (
    select pg_extension.oid as _id, *
    from pg_catalog.pg_extension
  ),

  indexes as (
    select *
    from pg_catalog.pg_index
    where indrelid in (select classes._id from classes)
  ),

  inherits as (
    select *
    from pg_catalog.pg_inherits
    where inhrelid in (select classes._id from classes)
  ),

  languages as (
    select pg_language.oid as _id, *
    from pg_catalog.pg_language
  ),

  policies as (
    select *
    from pg_catalog.pg_policy
    where polrelid in (select classes._id from classes)
  ),

  ranges as (
    select *
    from pg_catalog.pg_range
    where rngtypid in (select types._id from types)
  ),

  depends as (
    select *
    from pg_catalog.pg_depend
    where deptype IN ('a', 'e') and (
      (classid = 'pg_catalog.pg_namespace'::regclass and objid in (select namespaces._id from namespaces))
      or (classid = 'pg_catalog.pg_class'::regclass and objid in (select classes._id from classes))
      or (classid = 'pg_catalog.pg_attribute'::regclass and objid in (select classes._id from classes) and objsubid > 0)
      or (classid = 'pg_catalog.pg_constraint'::regclass and objid in (select constraints._id from constraints))
      or (classid = 'pg_catalog.pg_proc'::regclass and objid in (select procs._id from procs))
      or (classid = 'pg_catalog.pg_type'::regclass and objid in (select types._id from types))
      or (classid = 'pg_catalog.pg_enum'::regclass and objid in (select enums._id from enums))
      or (classid = 'pg_catalog.pg_extension'::regclass and objid in (select extensions._id from extensions))
    )
  ),

  descriptions as (
    select *
    from pg_catalog.pg_description
    where (
      (classoid = 'pg_catalog.pg_namespace'::regclass and objoid in (select namespaces._id from namespaces))
      or (classoid = 'pg_catalog.pg_class'::regclass and objoid in (select classes._id from classes))
      or (classoid = 'pg_catalog.pg_attribute'::regclass and objoid in (select classes._id from classes) and objsubid > 0)
      or (classoid = 'pg_catalog.pg_constraint'::regclass and objoid in (select constraints._id from constraints))
      or (classoid = 'pg_catalog.pg_proc'::regclass and objoid in (select procs._id from procs))
      or (classoid = 'pg_catalog.pg_type'::regclass and objoid in (select types._id from types))
      or (classoid = 'pg_catalog.pg_enum'::regclass and objoid in (select enums._id from enums))
      or (classoid = 'pg_catalog.pg_extension'::regclass and objoid in (select extensions._id from extensions))
    )
  ),

  am as (
    select pg_am.oid as _id, *
    from pg_catalog.pg_am
    where true
  )
select json_build_object(
  'database',
  (select row_to_json(database) from database),

  'namespaces',
  (select coalesce((select json_agg(row_to_json(namespaces) order by nspname) from namespaces), '[]'::json)),

  'classes',
  (select coalesce((select json_agg(row_to_json(classes) order by relnamespace, relname) from classes), '[]'::json)),

  'attributes',
  (select coalesce((select json_agg(row_to_json(attributes) order by attrelid, attnum) from attributes), '[]'::json)),

  'constraints',
  (select coalesce((select json_agg(row_to_json(constraints) order by connamespace, conrelid, conname) from constraints), '[]'::json)),

  'procs',
  (select coalesce((select json_agg(row_to_json(procs) order by pronamespace, proname, pg_get_function_identity_arguments(procs._id)) from procs), '[]'::json)),

  'roles',
  (select coalesce((select json_agg(row_to_json(roles) order by rolname) from roles), '[]'::json)),

  'auth_members',
  (select coalesce((select json_agg(row_to_json(auth_members) order by roleid, member, grantor) from auth_members), '[]'::json)),

  'types',
  (select coalesce((select json_agg(row_to_json(types) order by typnamespace, typname) from types), '[]'::json)),

  'enums',
  (select coalesce((select json_agg(row_to_json(enums) order by enumtypid, enumsortorder) from enums), '[]'::json)),

  'extensions',
  (select coalesce((select json_agg(row_to_json(extensions) order by extname) from extensions), '[]'::json)),

  'indexes',
  (select coalesce((select json_agg(row_to_json(indexes) order by indrelid, indexrelid) from indexes), '[]'::json)),

  'inherits',
  (select coalesce((select json_agg(row_to_json(inherits) order by inhrelid, inhseqno) from inherits), '[]'::json)),

  'languages',
  (select coalesce((select json_agg(row_to_json(languages) order by lanname) from languages), '[]'::json)),

  'policies',
  (select coalesce((select json_agg(row_to_json(policies) order by polrelid, polname) from policies), '[]'::json)),

  'ranges',
  (select coalesce((select json_agg(row_to_json(ranges) order by rngtypid) from ranges), '[]'::json)),

  'depends',
  (select coalesce((select json_agg(row_to_json(depends) order by classid, objid, objsubid, refclassid, refobjid, refobjsubid) from depends), '[]'::json)),

  'descriptions',
  (select coalesce((select json_agg(row_to_json(descriptions) order by objoid, classoid, objsubid) from descriptions), '[]'::json)),

  'am',
  (select coalesce((select json_agg(row_to_json(am) order by amname) from am), '[]'::json)),

  'catalog_by_oid',
  (
    select json_object_agg(oid::text, relname order by relname asc)
    from pg_class
    where relnamespace = (
      select oid
      from pg_namespace
      where nspname = 'pg_catalog'
    )
    and relkind = 'r'
  ),

  'current_user',
  current_user,
  'pg_version',
  version(),
  'introspection_version',
  1
)::text as introspection
`;
exports.makeIntrospectionQuery = makeIntrospectionQuery;
//# sourceMappingURL=introspection.js.map