%%{init: {'themeVariables': { 'fontSize': '12px'}}}%%
graph TD
    classDef path fill:#eee,stroke:#000,color:#000
    classDef plan fill:#fff,stroke-width:1px,color:#000
    classDef itemplan fill:#fff,stroke-width:2px,color:#000
    classDef unbatchedplan fill:#dff,stroke-width:1px,color:#000
    classDef sideeffectplan fill:#fcc,stroke-width:2px,color:#000
    classDef bucket fill:#f6f6f6,color:#000,stroke-width:2px,text-align:left


    %% plan dependencies
    PgSelect6[["PgSelect[6∈0] ➊<br />ᐸrandom_userᐳ"]]:::plan
    Object9{{"Object[9∈0] ➊<br />ᐸ{pgSettings,withPgClient}ᐳ"}}:::plan
    Lambda21{{"Lambda[21∈0] ➊<br />ᐸcalculateShouldReverseOrderᐳ"}}:::plan
    Lambda24{{"Lambda[24∈0] ➊<br />ᐸcalculateLimitAndOffsetSQLᐳ"}}:::plan
    Lambda29{{"Lambda[29∈0] ➊<br />ᐸcalculateOrderBySQLᐳ"}}:::plan
    Lambda34{{"Lambda[34∈0] ➊<br />ᐸcalculateOrderBySQLᐳ"}}:::plan
    Object9 & Lambda21 & Lambda24 & Lambda29 & Lambda34 --> PgSelect6
    Object28{{"Object[28∈0] ➊<br />ᐸ{reverse,orders,alias,codec}ᐳ"}}:::plan
    Constant25{{"Constant[25∈0] ➊<br />ᐸ[]ᐳ"}}:::plan
    Constant26{{"Constant[26∈0] ➊<br />ᐸ{ s: Symbol(random_user), n: 'random_user', [Symbol(pg-sql2-ᐳ"}}:::plan
    Constant27{{"Constant[27∈0] ➊<br />ᐸ{ name: 'users', sqlType: { t: 'app_public.users', [Symbol(pᐳ"}}:::plan
    Lambda21 & Constant25 & Constant26 & Constant27 --> Object28
    Access7{{"Access[7∈0] ➊<br />ᐸ2.pgSettingsᐳ"}}:::plan
    Access8{{"Access[8∈0] ➊<br />ᐸ2.withPgClientᐳ"}}:::plan
    Access7 & Access8 --> Object9
    __Value2["__Value[2∈0] ➊<br />ᐸcontextᐳ"]:::plan
    __Value2 --> Access7
    __Value2 --> Access8
    First10{{"First[10∈0] ➊"}}:::plan
    PgSelect6 --> First10
    PgSelectSingle11{{"PgSelectSingle[11∈0] ➊<br />ᐸusersᐳ"}}:::plan
    First10 --> PgSelectSingle11
    Constant36{{"Constant[36∈0] ➊<br />ᐸ§{ first: null, last: null, cursorLower: null, cursorUpper: ᐳ"}}:::plan
    Constant36 --> Lambda21
    Constant37{{"Constant[37∈0] ➊<br />ᐸ§{ cursorLower: null, cursorUpper: null, first: null, last: ᐳ"}}:::plan
    Constant37 --> Lambda24
    Object28 --> Lambda29
    Constant38{{"Constant[38∈0] ➊<br />ᐸ§{ reverse: false, orders: [], alias: { s: Symbol(random_useᐳ"}}:::plan
    Constant38 --> Lambda34
    __Value0["__Value[0∈0] ➊<br />ᐸvariableValuesᐳ"]:::plan
    __Value4["__Value[4∈0] ➊<br />ᐸrootValueᐳ"]:::plan
    Constant35{{"Constant[35∈0] ➊<br />ᐸ§{}ᐳ"}}:::plan
    GraphQLResolver14[["GraphQLResolver[14∈1] ➊<br />ᐸresolveᐳ"]]:::unbatchedplan
    PgClassExpression12{{"PgClassExpression[12∈1] ➊<br />ᐸ__random_u...”username”ᐳ"}}:::plan
    PgClassExpression12 & Constant35 & __Value2 & __Value0 & __Value4 --> GraphQLResolver14
    PgSelectSingle11 --> PgClassExpression12
    GraphQLResolver16[["GraphQLResolver[16∈2] ➊<br />ᐸresolveᐳ"]]:::unbatchedplan
    GraphQLResolver14 & Constant35 & __Value2 & __Value0 & __Value4 --> GraphQLResolver16
    GraphQLResolver18[["GraphQLResolver[18∈2] ➊<br />ᐸresolveᐳ"]]:::unbatchedplan
    GraphQLResolver14 & Constant35 & __Value2 & __Value0 & __Value4 --> GraphQLResolver18

    %% define steps

    subgraph "Buckets for queries/resolvers/basics-object"
    Bucket0("Bucket 0 (root)<br /><br />1: <br />ᐳ: 7, 8, 25, 26, 27, 35, 36, 37, 38, 9, 21, 24, 28, 29, 34<br />2: PgSelect[6]<br />ᐳ: First[10], PgSelectSingle[11]"):::bucket
    classDef bucket0 stroke:#696969
    class Bucket0,__Value0,__Value2,__Value4,PgSelect6,Access7,Access8,Object9,First10,PgSelectSingle11,Lambda21,Lambda24,Constant25,Constant26,Constant27,Object28,Lambda29,Lambda34,Constant35,Constant36,Constant37,Constant38 bucket0
    Bucket1("Bucket 1 (nullableBoundary)<br />Deps: 11, 35, 2, 0, 4<br /><br />ROOT PgSelectSingleᐸusersᐳ[11]<br />1: <br />ᐳ: PgClassExpression[12]<br />2: GraphQLResolver[14]"):::bucket
    classDef bucket1 stroke:#00bfff
    class Bucket1,PgClassExpression12,GraphQLResolver14 bucket1
    Bucket2("Bucket 2 (nullableBoundary)<br />Deps: 14, 35, 2, 0, 4<br /><br />ROOT GraphQLResolver{1}ᐸresolveᐳ[14]"):::bucket
    classDef bucket2 stroke:#7f007f
    class Bucket2,GraphQLResolver16,GraphQLResolver18 bucket2
    Bucket0 --> Bucket1
    Bucket1 --> Bucket2
    end
