mutation Insert {
  a: insertThing(input: { note: "a" }) { ...payloadThing }
  b: insertThing(input: { rowId: 9, note: "b", clientMutationId: "hello" }) { ...payloadThing }
  c: insertRelation(input: { aThingId: 8, bThingId: 9 }) { ...payloadRelation }
  d: insertAnythingGoes(input: {}) { anythingGoes { foo bar } }
}

fragment payloadThing on InsertThingPayload {
  clientMutationId
  thing {
    id
    rowId
    note
  }
  withArg: thingEdge(orderBy: ROW_ID) {
    cursor
    node {
      id
      rowId
      note
    }
  }
  withoutArg: thingEdge {
    cursor
    node {
      id
      rowId
      note
    }
  }
}

fragment payloadRelation on InsertRelationPayload {
  clientMutationId
  relation {
    aThingId
    bThingId
    thingByAThingId {
      id
      rowId
      note
    }
    thingByBThingId {
      id
      rowId
      note
    }
  }
  relationEdge {
    cursor
    node {
      aThingId
      bThingId
      thingByAThingId {
        id
        rowId
        note
      }
      thingByBThingId {
        id
        rowId
        note
      }
    }
  }
}
