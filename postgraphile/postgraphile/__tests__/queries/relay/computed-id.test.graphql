## expect(errors).toBeFalsy()
#> schema: ["relay"]
#> extends: ["postgraphile/presets/relay:PgRelayPreset"]
query Q {
  a: user(id: "WyJ1c2VycyIsMV0=") {
    username # Alice
    base: maxReadingDistance
    model1: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwxXQ==")
    model2: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwyXQ==")
    model3: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwzXQ==")
    model4: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiw0XQ==")
    # We treat invalid data as if `null` was specified
    nonsense1: maxReadingDistance(withSpectacles: "WyJ1c2VycyIsMV0=") # User:1!
    nonsense2: maxReadingDistance(withSpectacles: "query")
    nonsense3: maxReadingDistance(withSpectacles: "invalidnodeid")
  }
  b: user(id: "WyJ1c2VycyIsMl0=") {
    username # Bob
    base: maxReadingDistance
    model1: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwxXQ==")
    model2: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwyXQ==")
    model3: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiwzXQ==")
    model4: maxReadingDistance(withSpectacles: "WyJzcGVjdGFjbGVzIiw0XQ==")
    # We treat invalid data as if `null` was specified
    nonsense1: maxReadingDistance(withSpectacles: "WyJ1c2VycyIsMV0=") # User:1!
    nonsense2: maxReadingDistance(withSpectacles: "query")
    nonsense3: maxReadingDistance(withSpectacles: "invalidnodeid")
  }
}
