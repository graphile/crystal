mutation {
  a: updatePerson(input: {
    __id: "WyJwZW9wbGUiLDFd",
    personPatch: {
      name: "John Smith Sr."
      about: "An older John Smith"
    }
  }) { ...updatePersonPayload }
  b: updatePerson(input: {
    clientMutationId: "hello"
    __id: "WyJwZW9wbGUiLDJd",
    personPatch: {
      name: "Sarah Smith"
      email: "sarah.smith@email.com"
    }
  }) { ...updatePersonPayload }
  c: updatePerson(input: {
    clientMutationId: "world"
    __id: "WyJwZW9wbGUiLDJd"
    personPatch: {
      about: "Now with an “H.”"
    }
  }) { ...updatePersonPayload }
  d: updatePersonById(input: {
    id: 3
    personPatch: {
      name: "Best Pal"
      about: "I have taken over Budd’s account. Hehehe."
    }
  }) { ...updatePersonPayload }
  e: updatePersonByEmail(input: {
    email: "kathryn.ramirez@email.com"
    personPatch: {
      about: "Make art not friends."
    }
  }) { ...updatePersonPayload }
  f: updateCompoundKey(input: {
    __id: "WyJjb21wb3VuZF9rZXlzIiwxLDJd"
    compoundKeyPatch: {
      personId1: 2
      extra: true
    }
  }) { ...updateCompoundKeyPayload }
  g: updateCompoundKeyByPersonId1AndPersonId2(input: {
    clientMutationId: "hello"
    personId1: 2
    personId2: 2
    compoundKeyPatch: {
      personId1: 3
      extra: false
    }
  }) { ...updateCompoundKeyPayload }
  h: updateCompoundKeyByPersonId1AndPersonId2(input: {
    clientMutationId: "world"
    personId1: 4
    personId2: 3
    compoundKeyPatch: {
      extra: false
    }
  }) { ...updateCompoundKeyPayload }
}

fragment updatePersonPayload on UpdatePersonPayload {
  clientMutationId
  person {
    __id
    id
    name
    email
    about
  }
}

fragment updateCompoundKeyPayload on UpdateCompoundKeyPayload {
  clientMutationId
  compoundKey {
    __id
    personId1
    personId2
    extra
    personByPersonId1 {
      id
      name
    }
    personByPersonId2 {
      id
      name
    }
  }
}
