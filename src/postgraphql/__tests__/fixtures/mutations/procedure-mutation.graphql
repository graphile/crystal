mutation {
  jsonIdentityMutation(input: { json: "{\"a\":1,\"b\":2,\"c\":3}" }) { json }
  add1Mutation(input: { arg0: 1, arg1: 2 }) { clientMutationId integer }
  add2Mutation(input: { clientMutationId: "hello", a: 2, b: 2 }) { clientMutationId integer }
  add3Mutation(input: { clientMutationId: "world", arg1: 5 }) { clientMutationId integer }
  add4Mutation(input: { arg0: 1, b: 3 }) { integer }
  mult1(input: { arg0: 0, arg1: 1 }) { integer }
  mult2(input: { arg0: 1, arg1: 1 }) { integer }
  mult3(input: { arg0: 1, arg1: 2 }) { integer }
  mult4(input: { arg0: 5, arg1: 2 }) { integer }
  typesMutation(input: { a: "50", b: false, c: "xyz", d: [1, 2, 3], e: "{\"a\":1,\"b\":2,\"c\":3}", f: { start: { value: 1, inclusive: false }, end: { value: 5, inclusive: false } } }) { boolean }
  compoundTypeMutation(input: { object: { a: 419, b: "easy cheesy baked potatoes", c: RED, fooBar: 8 } }) { compoundType { a b c d fooBar } }
  tableMutation(input: { id: 5 }) { post { nodeId id headline authorId } personByAuthorId { id name } postEdge { cursor node { id headline } } }
  tableSetMutation(input: {}) { people { name } }
  intSetMutation(input: { x: 5, z: 6 }) { integers }
  noArgsMutation(input: { clientMutationId: "x" }) { clientMutationId integer }
  returnVoidMutation(input: {}) { __typename }
}
